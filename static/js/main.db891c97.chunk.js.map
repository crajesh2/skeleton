{"version":3,"sources":["Skeletons/Shimmer.js","Skeletons/SkeletonElement.js","Skeletons/SkeletonArticle.js","components/Articles.js","Skeletons/SkeletonProfile.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Shimmer","props","className","SkeletonElement","type","classes","SkeleteonArticle","themeClass","theme","Articles","useState","articles","setArticles","useEffect","setTimeout","a","fetch","res","json","data","map","article","title","body","id","n","SkeletonProfile","User","profile","setProfile","username","email","href","website","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAaeA,EAXC,SAACC,GACf,OACE,qBAAKC,UAAU,kBAAf,SACI,qBAAKA,UAAU,eCORC,G,MARS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChBC,EAAO,mBAAeD,GAC9B,OACE,qBAAKF,UAAWG,MCcLC,EAjBU,SAAC,GAAgB,IAClCC,EADiC,EAAZC,OACC,QAE5B,OACE,sBAAKN,UAAS,2BAAsBK,GAApC,UACI,sBAAKL,UAAU,mBAAf,UACI,cAAC,EAAD,CAAiBE,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,YAE1B,cAAC,EAAD,QCYOK,EAxBE,WAAO,IAAD,EACaC,mBAAS,MADtB,mBACZC,EADY,KACFC,EADE,KASrB,OAPEC,qBAAU,WACNC,WAAU,sBAAC,8BAAAC,EAAA,sEACWC,MAAM,8CADjB,cACDC,EADC,gBAEYA,EAAIC,OAFhB,OAEDC,EAFC,OAGPP,EAAYO,GAHL,2CAIR,QAGP,sBAAKjB,UAAU,WAAf,UACI,0CACCS,GAAYA,EAASS,KAAI,SAAAC,GAAO,OAC7B,sBAAKnB,UAAU,UAAf,UACI,6BAAKmB,EAAQC,QACb,4BAAKD,EAAQE,SAFaF,EAAQG,QAKxCb,GAAY,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGS,KAAI,SAACK,GAAD,OAAO,cAAC,EAAD,CAA0BjB,MAAM,QAATiB,UCArDC,EAlBS,SAAC,GAAe,IAC9BnB,EAD6B,EAAZC,OACK,QAC9B,OACE,qBAAKN,UAAS,2BAAsBK,GAApC,SACI,sBAAKL,UAAU,oBAAf,UACI,8BACI,cAAC,EAAD,CAAiBE,KAAK,aAE1B,gCACI,cAAC,EAAD,CAAiBA,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,kBCgBvBuB,EA3BF,WAAO,IAAD,EACejB,mBAAS,MADxB,mBACRkB,EADQ,KACCC,EADD,KAWjB,OAREhB,qBAAU,WACNC,WAAU,sBAAC,8BAAAC,EAAA,sEACWC,MAAM,gDADjB,cACDC,EADC,gBAEYA,EAAIC,OAFhB,OAEDC,EAFC,OAGPU,EAAWV,GAHJ,2CAIR,QAIP,sBAAKjB,UAAU,OAAf,UACI,8CACE0B,GACE,sBAAK1B,UAAU,UAAf,UACI,6BAAK0B,EAAQE,WACb,kCAAMF,EAAQG,SACd,mBAAGC,KAAMJ,EAAQK,QAAjB,SAA2BL,EAAQK,cAGzCL,GAAW,cAAC,EAAD,QCNNM,MAdf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mDAEF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCAOiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db891c97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Shimmer = (props) => {\r\n  return(\r\n    <div className=\"shimmer-wrapper\">\r\n        <div className=\"shimmer\">\r\n            \r\n        </div>\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Shimmer","import React from 'react';\r\nimport './Skeleton.css';\r\n\r\n\r\nconst SkeletonElement = ({type}) => {\r\n    const classes = `skeleton ${type}`;\r\n  return(\r\n    <div className={classes}></div>\r\n   )\r\n\r\n }\r\n\r\nexport default SkeletonElement","import React from 'react'\r\nimport Shimmer from './Shimmer';\r\nimport SkeletonElement from './SkeletonElement'\r\n\r\nconst SkeleteonArticle = ( { theme }) => {\r\n  const themeClass = theme || 'light';\r\n\r\n  return(\r\n    <div className={`skeleton-wrapper ${themeClass}`}>\r\n        <div className=\"skeleton-article\">\r\n            <SkeletonElement type=\"title\" />\r\n            <SkeletonElement type=\"text\" />\r\n            <SkeletonElement type=\"text\" />\r\n            <SkeletonElement type=\"text\" />\r\n        </div>\r\n        <Shimmer />\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default SkeleteonArticle","import React, { useEffect, useState } from 'react';\r\nimport SkeleteonArticle from '../Skeletons/SkeletonArticle';\r\n\r\nconst Articles = () => {\r\n    const [articles, setArticles] = useState(null);\r\n    useEffect(() => {\r\n        setTimeout(async () => {\r\n            const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n            const data = await res.json();\r\n            setArticles(data);\r\n        }, 5000)\r\n    })\r\n  return(\r\n    <div className=\"articles\">\r\n        <h2>Articles</h2>   \r\n        {articles && articles.map(article => (\r\n            <div className=\"article\" key={article.id}>\r\n                <h3>{article.title}</h3>\r\n                <p>{ article.body}</p>\r\n            </div>\r\n        ))}\r\n        {!articles && [1,2,3,4,5].map((n) => <SkeleteonArticle key={n} theme=\"dark\" />)}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Articles","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonProfile = ({ theme }) => {\r\n    const themeClass = theme || 'light';\r\n  return(\r\n    <div className={`skeleton-wrapper ${themeClass}`}>\r\n        <div className=\"skeletopn-profile\">\r\n            <div>\r\n                <SkeletonElement type=\"avatar\" />\r\n            </div>\r\n            <div>\r\n                <SkeletonElement type=\"title\" />\r\n                <SkeletonElement type=\"text\" />\r\n                <SkeletonElement type=\"text\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n   )\r\n }\r\n\r\nexport default SkeletonProfile","import React, { useEffect, useState } from 'react'\r\nimport SkeletonProfile from '../Skeletons/SkeletonProfile'\r\n\r\nconst User = () => {\r\n    const [profile, setProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setTimeout(async () => {\r\n            const res = await fetch('https://jsonplaceholder.typicode.com/users/1');\r\n            const data = await res.json();\r\n            setProfile(data);\r\n        }, 5000)\r\n        \r\n    })\r\n  return(\r\n    <div className=\"user\">\r\n        <h2>User Details</h2>        \r\n        { profile && (\r\n            <div className=\"profile\">\r\n                <h3>{profile.username}</h3>\r\n                <p> { profile.email }</p>\r\n                <a href={profile.website}>{profile.website}</a>\r\n            </div>\r\n        )}\r\n        {!profile && <SkeletonProfile />}\r\n    </div>    \r\n   )\r\n\r\n }\r\n\r\nexport default User","import './App.css';\nimport Articles from './components/Articles';\nimport User from './components/User';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>React Skeletons</h1>\n      </header>\n      <div className=\"content\">\n        <Articles />\n        <User />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}